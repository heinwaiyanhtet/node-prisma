// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id                Int                 @id @default(autoincrement())
  title             String
  content           String?
  published         Boolean             @default(false)
  author            User?               @relation(fields: [authorId], references: [id],onDelete: Cascade, onUpdate: Cascade)
  authorId          Int?
  CategoriesOnPosts CategoriesOnPosts[]
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

model Profile {
  id        Int    @id @default(autoincrement())
  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String @unique
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post   Post @relation(fields: [postId], references: [id])
  postId Int

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}

enum Type {
  Blog
  Twitter @map("comment_twitter")

  @@map("comment_source_enum")
}

model Comment {
  id      Int    @id @default(autoincrement()) // Adding a primary key
  content String @map("comment_text")
  email   String @map("commenter_email")
  type    Type   @map("comment_type")  // Closing quotation mark added

  @@map("comments")
}
